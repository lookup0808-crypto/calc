import React, { useState } from "react";
import ChartGraph from "../components/ChartGraph";
import Footer from "../components/Footer";

export default function FireSim() {
  const [currentAge, setCurrentAge] = useState(25);
  const [income, setIncome] = useState(3000);
  const [savingRate, setSavingRate] = useState(0.3);
  const [targetAssets, setTargetAssets] = useState(1000000);
  const [result, setResult] = useState(null);

  const simulateFIRE = () => {
    let age = currentAge;
    let totalAssets = 0;
    const monthlySaving = income * savingRate;
    const annualReturn = 0.07;
    const assetsOverTime = [];

    while (totalAssets < targetAssets) {
      totalAssets = totalAssets * (1 + annualReturn / 12) + monthlySaving;
      age += 1 / 12;
      assetsOverTime.push({ age: parseFloat(age.toFixed(1)), assets: parseFloat(totalAssets.toFixed(2)) });
    }

    setResult({ fireAge: Math.round(age), assetsOverTime, monthlySaving });
  };

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-xl font-bold mb-4">FIRE 시뮬레이션</h1>
      <div className="mb-4">
        <label>현재 나이:</label>
        <input type="number" value={currentAge} onChange={e => setCurrentAge(Number(e.target.value))} className="border p-1 ml-2"/>
      </div>
      <div className="mb-4">
        <label>월 소득 ($):</label>
        <input type="number" value={income} onChange={e => setIncome(Number(e.target.value))} className="border p-1 ml-2"/>
      </div>
      <div className="mb-4">
        <label>저축률 (%):</label>
        <input type="number" value={savingRate*100} onChange={e => setSavingRate(Number(e.target.value)/100)} className="border p-1 ml-2"/>
      </div>
      <div className="mb-4">
        <label>목표 자산 ($):</label>
        <input type="number" value={targetAssets} onChange={e => setTargetAssets(Number(e.target.value))} className="border p-1 ml-2"/>
      </div>
      <button onClick={simulateFIRE} className="bg-orange-500 text-white px-4 py-2 rounded">시뮬레이션 실행</button>

      {result && (
        <div className="mt-6">
          <h2>예상 FIRE 달성 나이: {result.fireAge}세</h2>
          <ChartGraph data={result.assetsOverTime} title="자산 성장" labelKey="age" valueKey="assets" />
        </div>
      )}
      <Footer />
    </div>
  );
}
